**********Problem**********
Given a positive integer, output its complement number. The complement strategy is to flip the bits of its binary representation.
Example 1:
Input: 5
Output: 2
Explanation: The binary representation of 5 is 101 (no leading zero bits), and its complement is 010. So you need to output 2.
Example 2:
Input: 1
Output: 0
Explanation: The binary representation of 1 is 1 (no leading zero bits), and its complement is 0. So you need to ou

**********Solution**********
class Solution {
    public int findComplement(int num) {
        
        String s=Integer.toBinaryString(num);
        String s1=s+"";
        char c[]=s1.toCharArray();
        int arr[]=new int[c.length];
        for(int i=0;i<c.length;i++)
        {
            if(c[i]=='0')
                arr[i]=1;
                
            else
                arr[i]=0;
        }
        String b="";    
        for(int i=0;i<c.length;i++)
            b+=arr[i];
        int result=Integer.parseInt(b,2);
        return result;      
    }    
}
